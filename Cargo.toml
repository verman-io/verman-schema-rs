[package]
name = "verman-schema-rs"
version = "0.0.1"
edition = "2021"
license = "Apache-2.0 OR MIT"

[dependencies]
derive_more = { version = "1.0.0", features = ["display", "error", "from", "from_str"] }
either = { version = "^1.13", features = ["serde"] }
hifijson = "0.2.0"
http = "^1"
indexmap = { version = "^2.5", features = ["serde"] }
jaq-core = { git = "https://github.com/01mf02/jaq", version = "2.0.0-alpha.1" }
jaq-json = { git = "https://github.com/01mf02/jaq", version = "1.0.0-alpha", features = ["serde_json"] }
jaq-std = { git = "https://github.com/01mf02/jaq", version = "2.0.0-alpha.1" }
lazy_static = "^1.5"
log = "^0.4"
memmap2 = "0.9"
reqwest = { version = "^0.12", features = ["json"] }
serde = { version = "^1", features = ["serde_derive"] }
serde-json-extensions = { git = "https://github.com/SamuelMarks/serde-json-extensions", version = "0.0.1" }
serde_derive = "^1"
serde_json = { version = "^1", features = ["indexmap", "preserve_order"] }
subst = { version = "^0.3", features = ["preserve-order"] }
tokio = { version = "^1.40", features = ["macros"] }
toml = { version = "^0.8", features = ["indexmap", "preserve_order"] }

[features]
# Use an arbitrary precision number representation for JSON `Number`. This
# allows JSON numbers of arbitrary size/precision to be read into a Number and
# written back to a JSON string without loss of precision.
#
# Unlike float_roundtrip, this feature makes JSON -> `Number` -> JSON
# produce output identical to the input.
arbitrary_precision = []
